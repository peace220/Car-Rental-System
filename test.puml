@startuml
class com.example.rentcar.EmailValidation {
+ <<Create>> EmailValidation(String)
+ Boolean isValid()
}
class com.example.rentcar.CarInfoFileHandler {
- CarInfo carInfo
- {static} String FILEPATH
+ <<Create>> CarInfoFileHandler()
+ <<Create>> CarInfoFileHandler(CarInfo)
+ void writefile()
+ String getCarBrand()
+ void editFile()
+ void getbrand_model()
- String[] getfiletext()
+ CarInfo getCarInfo()
+ void setCarInfo(CarInfo)
}
class com.example.rentcar.DateValidation {
- {static} SimpleDateFormat df
+ <<Create>> DateValidation(String)
+ Boolean isValid()
}
class com.example.rentcar.SearchHistory {
- TableColumn<CarInfo,String> colAutoManual
- TableColumn<CarInfo,String> colBrand
- TableColumn<CarInfo,String> colCarName
- TableColumn<CarInfo,String> colDropOffLocation
- TableColumn<CarInfo,String> colLicensePlate
- TableColumn<CarInfo,String> colPickUpLocation
- TableColumn<CarInfo,Double> colPrice
- TableColumn<CarInfo,Double> colRate
- TableColumn<CarInfo,Integer> colSeats
- AnchorPane contentArea
- TableView<CarInfo> tableHistory
- Customer customer
- List<String> carsLicensePlate
- ObservableList<CarInfo> data
+ void initialize(URL,ResourceBundle)
- void handleData(List<String>)
- List<String> filterViewHistoryData()
}
class com.example.rentcar.UniqueUsernameValidation {
+ <<Create>> UniqueUsernameValidation(String)
+ Boolean isValid()
}
class com.example.rentcar.DashboardController {
- AnchorPane contentArea
- HBox recentViewContentArea
- HBox offerContentArea
- Button btnToday
- Button btnTomorrow
- Button btnBookingSearch
- Label labelDropOffDate
- Label labelDropOffLocation
- Label labelPickUpDate
- Label labelPickUpLocation
- TextField textBoxDropOffDate
- TextField textBoxDropOffLocation
- TextField textBoxPickUpDate
- TextField textBoxPickUpLocation
- Customer customer
- List<CarInfo> tempStoreCustomerViewHistory
- List<CarInfo> storeCustomerViewHistoryDetails
- List<Offer> storeOfferDetails
- SearchEngine searchEngine
+ void initialize(URL,ResourceBundle)
- void getTomorrowDate(ActionEvent)
- void bookingSearch(ActionEvent)
- {static} boolean isValid(String,String,String,String)
- AnchorPane recentViewCarCard(CarInfo)
- List<CarInfo> receiveCustomerViewData()
- List<CarInfo> matchingData(List<CarInfo>)
- List<Offer> receiveOfferData()
- AnchorPane offerCard(Offer)
- boolean checkIfAvailable(String,LocalDate,LocalDate)
}
class com.example.rentcar.CustomerBookingHistoryHolder {
- CustomerBookingHistory customerBookingHistory
- {static} CustomerBookingHistoryHolder INSTANCE
- <<Create>> CustomerBookingHistoryHolder()
+ {static} CustomerBookingHistoryHolder getInstance()
+ void setCustomerBookingHistory(CustomerBookingHistory)
+ CustomerBookingHistory getCustomerBookingHistory()
}
class com.example.rentcar.Offer {
- String discountCode
- String imageName
- String validDate
- String description
- double operation
+ <<Create>> Offer()
+ <<Create>> Offer(String,String,String,String,double)
+ String getDiscountCode()
+ void setDiscountCode(String)
+ String getImageName()
+ void setImageName(String)
+ String getValidDate()
+ void setValidDate(String)
+ String getDescription()
+ void setDescription(String)
+ double getOperation()
+ void setOperation(double)
}
class com.example.rentcar.Rating {
- double total
- ArrayList<Double> rates
- {static} String ratingFilePath
- double average
+ <<Create>> Rating(String)
+ void averageRate(ArrayList<Double>)
- ArrayList<Double> handleData(String)
+ double getAverage()
+ void setAverage(double)
}
class com.example.rentcar.NavigationBarController {
- Button btnBookACar
- Circle profilePicture
- Pane contentArea
+ void initialize(URL,ResourceBundle)
- void initDefaultFocus()
~ void initProfile(String)
- void initDefaultPage()
+ void dashboardPage(ActionEvent)
+ void bookACarPage(ActionEvent)
+ void myBookingsPage(ActionEvent)
+ void myWalletPage(ActionEvent)
+ void SearchHistoryPage(ActionEvent)
+ void messagePage(ActionEvent)
+ void helpPage(ActionEvent)
+ void settingsPage(ActionEvent)
+ void logOutPage(ActionEvent)
- void updateFocusStyle(ActionEvent)
- void initContentArea(String)
}
class com.example.rentcar.Settings {
- Button buttonChange
- Button buttonDelete
- Button buttonNotification
- Button buttonPassword
- Button buttonProfile
- Button buttonUpdate
- Label labelClickMeUpload
- AnchorPane contentPage
- AnchorPane settingsContent
- Circle profilePictureContainer
- TextField textBoxDateOfBirth
- TextField textBoxEmailAddress
- TextField textBoxGender
- TextField textBoxFullName
- TextField textBoxLiveIn
- TextField textBoxStreetAddress
- Customer customer
- List<String> storeCustomerInfo
- String profilePath
- String saveAs
+ void initialize(URL,ResourceBundle)
- void changeAllProfileData(ActionEvent)
- void deleteUploadPhoto(ActionEvent)
- void updateUploadPhoto(ActionEvent)
- void initProfileData(Customer)
- void editCustomerInfo(List<String>)
- void showChangesBox(boolean)
- void initDefaultFocus()
- void updateFocusStyle(ActionEvent)
- void switchToProfilePage(ActionEvent)
- void switchToPasswordPage(ActionEvent)
- void switchToNotificationPage(ActionEvent)
- void uploadNewProfilePicture(MouseEvent)
}
class com.example.rentcar.admin_CarInformationC {
- Stage stage
- Scene scene
- Parent root
- Pane ControlArea
- Label AorM
- ImageView carImage
+ void setData(CarInfo)
~ void EditorRemove(MouseEvent)
}
class com.example.rentcar.MyWallet {
- AnchorPane contentArea
- VBox paymentContent
- Button btnViewBalanceQuarterly
- Label labelShowBalance
- Label labelPaymentRecordsCarName
- Button btnTopUp
- Button btnViewBalanceMonthly
- ChoiceBox<DatePicker> choiceBoxPaymentRecordByMonth
- Label labelPaymentRecordsDate
- Label labelPaymentRecordsCost
- Label labelShowTotalPayment
- Button btnViewBalanceYearly
- AnchorPane showBalanceOverviews
- Customer customer
- DecimalFormat df
- ArrayList<CustomerBookingHistory> paymentRecordArrayList
- ArrayList<AnchorPane> storePaymentRecordCards
- {static} String filePathString
- {static} double total
- XYChart.Series<Number,Number> series1
- XYChart.Series<Number,Number> series2
- XYChart.Series<Number,Number> series3
- List<Number> data1
- List<Number> data2
- List<Number> data3
+ void initialize(URL,ResourceBundle)
- void TopUpMoney(ActionEvent)
- AnchorPane generatePaymentRecordCard(CustomerBookingHistory)
- void showPaymentRecord()
- void receiveCarData(String)
- void BalanceOverviews()
}
class com.example.rentcar.AutomaticUpdateStatus {
- ArrayList<String> carInfoArrayList
- {static} String bookingHistoryFilePath
+ <<Create>> AutomaticUpdateStatus()
+ String execute()
- ArrayList<String> updateStatusFromInProgressToCompleted()
- ArrayList<String> updateStatusFromApprovedToInProgress()
- void updateTextFile(ArrayList<String>)
}
abstract class com.example.rentcar.Validation {
- String field
+ <<Create>> Validation(String)
+ String getField()
+ void setField(String)
+ {abstract}Boolean isValid()
}
class com.example.rentcar.MyBookingsController {
- Button btnInProgress
- Button btnCompleted
- Button btnPreparing
- VBox showBookingsInfo
- Button btnCancelled
- String bookingsTextFilePath
- CustomerBookingHistoryManager cbhm
- Customer customer
+ void initialize(URL,ResourceBundle)
~ void showPreparing(ActionEvent)
~ void showInProgress(ActionEvent)
~ void showCompleted(ActionEvent)
~ void showCancelled(ActionEvent)
- void receiveCarData()
- void initialDefaultFocus()
- void updateFocusStyle(ActionEvent)
}
class com.example.rentcar.admin_EditCarInfoC {
- Label labelAorM
- Button backbutton
- Button btnEdit
- ComboBox<String> ComboBoxAutoManual
- Label labelBrand
- TextField textBoxPrice
- TextField textBoxLicensePlate
- Label labelCarmodel
- Label Entertxt
- Pane ControlArea
- TextField textBoxCarModel
- Label Success
- Label labelLicensePlate
- TextField textBoxBrand
- Label ErrormessageAM
- ComboBox<String> ComboBoxSeats
- Rectangle currentCarImageContainer
- Label Errormessage
- Rectangle editCarImageContainer
- Label labelCostperDay
- Label labelNoPassenger
- Label labelDropOffLocation
- Label labelPickUpLocation
- TextField textBoxPickUpLocation
- TextField textBoxDropOffLocation
- String[] AorMString
- String[] NumPassint
- CarInfo carInfo
- String uploadImagePath
- String saveAs
~ void Switch_CarInfo(ActionEvent)
+ void initialize(URL,ResourceBundle)
~ void EditAction(ActionEvent)
- void initContent(CarInfo)
- void uploadCarImage(MouseEvent)
}
class com.example.rentcar.CustomerInfoBookingHandler {
- CustomerBookingHistory customerBookingHistory
+ <<Create>> CustomerInfoBookingHandler(CustomerBookingHistory)
+ String getcarbrand()
+ void editcustomer(String)
}
class com.example.rentcar.SearchEngineDataHolder {
- SearchEngine searchEngine
- {static} SearchEngineDataHolder INSTANCE
+ {static} SearchEngineDataHolder getInstance()
+ SearchEngine getSearchEngine()
+ void setSearchEngine(SearchEngine)
}
class com.example.rentcar.TopUpController {
- AnchorPane contentArea
- Button btnTopUpNow
- Button buttonAdd1
- Button buttonAdd10
- Button buttonAdd100
- Button buttonAdd20
- Button buttonAdd5
- Button buttonAdd50
- Button buttonBack
- Label labelCurrentAmount
- Label labelTopUpAmount
- Slider sliderAmount
- Customer customer
- {static} DecimalFormat df
+ void initialize(URL,ResourceBundle)
- void add1(ActionEvent)
- void add10(ActionEvent)
- void add100(ActionEvent)
- void add20(ActionEvent)
- void add5(ActionEvent)
- void add50(ActionEvent)
~ void topUpNow(ActionEvent)
- void backToPreviousPage(ActionEvent)
}
class com.example.rentcar.CarInfoHolder {
- CarInfo carInfo
- {static} CarInfoHolder INSTANCE
- <<Create>> CarInfoHolder()
+ {static} CarInfoHolder getInstance()
+ void setCarInfo(CarInfo)
+ CarInfo getCarInfo()
}
class com.example.rentcar.BookingLocationAndDateController {
- Button btnSearch
- AnchorPane contentArea
- Label labelDropOffDay
- Label labelDropOffMonth
- Label labelPickUpDay
- Label labelPickUpMonth
- Button countryInfoIcon
- TextField textBoxDropOffLocation
- TextField textBoxPickUpLocation
- AnchorPane box
- String pickUpDate
- String dropOffDate
- SearchEngine searchEngine
+ void initialize(URL,ResourceBundle)
~ void searchCar(ActionEvent)
- void pickUpDate(MouseEvent)
- void dropOffDate(MouseEvent)
- void UpdateDateContainer()
- void initDateContainer()
- void showCountryDivInfo(MouseEvent)
- void hideCountryDivInfo(MouseEvent)
- {static} boolean isValid(String,String,String,String)
+ String getPickUpDate()
+ void setPickUpDate(String)
+ String getDropOffDate()
+ void setDropOffDate(String)
}
class com.example.rentcar.CustomerBookingHistory {
- String username
- String licensePlate
- String carBrand
- String carName
- String automaticTransmission
- String location1
- String location2
- String Date1
- String Date2
- double price
- int seats
- String imageName
- double rate
- String paymentMethod
- String status
- String bookingDateTime
- double discount
+ <<Create>> CustomerBookingHistory()
+ <<Create>> CustomerBookingHistory(String,String,String,String,String,String,String,String,String,double,int,String,double,String,String,String,double)
+ String getUsername()
+ void setUsername(String)
+ String getCarBrand()
+ void setCarBrand(String)
+ String getLicensePlate()
+ void setLicensePlate(String)
+ String getCarModel()
+ void setCarModel(String)
+ String getCarName()
+ void setCarName(String)
+ String getAutomaticTransmission()
+ void setAutomaticTransmission(String)
+ String getLocation1()
+ void setLocation1(String)
+ String getLocation2()
+ void setLocation2(String)
+ String getDate1()
+ void setDate1(String)
+ String getDate2()
+ void setDate2(String)
+ double getPrice()
+ void setPrice(double)
+ int getSeats()
+ void setSeats(int)
+ String getImageName()
+ void setImageName(String)
+ double getRate()
+ void setRate(double)
+ String getPaymentMethod()
+ void setPaymentMethod(String)
+ String getStatus()
+ void setStatus(String)
+ String getBookingDateTime()
+ void setBookingDateTime(String)
+ double getDiscount()
+ void setDiscount(double)
+ String getInfo()
}
class com.example.rentcar.CustomerBookingHistoryManager {
# int count
# CustomerBookingHistory[] bookingHistories
# {static} String storeCarImageFilePath
+ <<Create>> CustomerBookingHistoryManager()
+ void add(CustomerBookingHistory)
+ VBox loadPreparing()
+ VBox loadInProgress()
+ VBox loadCompleted()
+ VBox loadCancelled()
+ void printInfo()
+ AnchorPane initPane(CustomerBookingHistory)
- Rectangle initCarImage(CustomerBookingHistory)
- boolean needToShowRateButton(String,String)
}
class com.example.rentcar.CustomerHolder {
- Customer customer
- {static} CustomerHolder INSTANCE
- <<Create>> CustomerHolder()
+ {static} CustomerHolder getInstance()
+ void setUser(Customer)
+ Customer getCustomer()
}
class com.example.rentcar.BookingDetails {
- AnchorPane contentPage
- ImageView airconImage
- ImageView transmissionImage
- Label labelTransmission
- Button buttonBookNow
- Button buttonAddDiscountCode
- ImageView carImage
- Label labelCarName
- Label labelCarRentalFee
- Label labelDiscountAmount
- Label labelDropOffDateTime
- Label labelDropOffLocation
- Label labelPickUpDateTime
- Label labelPickUpLocation
- Label labelPremium
- Label labelRating
- Label labelReviewAmount
- Label labelTotalAmount
- Label labelLicensePlate
- Label labelMileage
- ImageView mileageImage
- ImageView passengerImage
- Rating ratingStar
- ImageView returnToPreviousPageImage
- TextField textBoxDiscountCode
- Customer customer
- SearchEngine searchEngine
- CarInfo carInfo
- SimpleDateFormat df
- Double total
- double operation
+ void initialize(URL,ResourceBundle)
- void bookNow(ActionEvent)
- void initContent(CarInfo)
- void receiveCarData()
- void verifyDiscountCode(ActionEvent)
- void returnToPreviousPage(MouseEvent)
- boolean verifyIfEnoughBalance()
- void updateCustomerBalance(String)
}
class com.example.rentcar.CarInfo {
- String licensePlate
- String carBrand
- String carName
- String automaticTransmission
- String location1
- String location2
- String date1
- String date2
- double price
- int seats
- String imageName
- double rate
- String paymentMethod
- String status
- String customerViewDate
+ <<Create>> CarInfo()
+ <<Create>> CarInfo(String,String,String,String,String,String,double,int,String)
+ <<Create>> CarInfo(String,String,String,String,String,String,String,String,double,int,String,double,String,String)
+ String getLicensePlate()
+ void setLicensePlate(String)
+ String getCarBrand()
+ void setCarBrand(String)
+ String getCarName()
+ void setCarName(String)
+ String getAutomaticTransmission()
+ void setAutomaticTransmission(String)
+ String getLocation1()
+ void setLocation1(String)
+ String getLocation2()
+ void setLocation2(String)
+ String getDate1()
+ void setDate1(String)
+ String getDate2()
+ void setDate2(String)
+ double getPrice()
+ void setPrice(double)
+ int getSeats()
+ void setSeats(int)
+ String getImageName()
+ void setImageName(String)
+ double getRate()
+ void setRate(double)
+ String getPaymentMethod()
+ void setPaymentMethod(String)
+ String getStatus()
+ void setStatus(String)
+ String getCustomerViewDate()
+ void setCustomerViewDate(String)
+ String getInfo()
+ int compareTo(CarInfo)
}
class com.example.rentcar.Report {
- CarInfoFileHandler carinfo
- SimpleStringProperty username
+ <<Create>> Report(String,String,String,String,String,String,String)
+ CarInfoFileHandler getCarinfo()
+ void setCarinfo(CarInfoFileHandler)
+ String getUsername()
+ SimpleStringProperty usernameProperty()
+ void setUsername(String)
+ String getLicensePlate()
+ SimpleStringProperty licensePlateProperty()
+ void setLicensePlate(String)
+ String getBrand()
+ SimpleStringProperty brandProperty()
+ void setBrand(String)
+ String getModel()
+ SimpleStringProperty modelProperty()
+ void setModel(String)
+ String getLocation1()
+ SimpleStringProperty location1Property()
+ void setLocation1(String)
+ String getLocation2()
+ SimpleStringProperty location2Property()
+ void setLocation2(String)
+ String getPrice()
+ SimpleStringProperty priceProperty()
+ void setPrice(String)
}
class com.example.rentcar.admin_ReportC {
- ComboBox<String> carbrand
- TableColumn<Report,String> colCarBrand
- Label errormessage
- TableColumn<Report,String> colPickUpLocation
- TableColumn<Report,String> colDropOffLocation
- DatePicker Date2
- TableColumn<Report,String> colLicensePlate
- ComboBox<String> Loc1CB
- ComboBox<String> Loc2CB
- DatePicker Date1
- Label Total
- TableView<Report> reporttable
- TableColumn<Report,String> colCarModel
- TableColumn<Report,Double> colPrice
- TableColumn<Report,String> colUsername
+ void initialize(URL,ResourceBundle)
- void load()
~ void Clear(javafx.event.ActionEvent)
~ void show(javafx.event.ActionEvent)
~ ObservableList<Report> observableList()
- void getcarbrand()
- void getlocation()
}
class com.example.rentcar.CarinformationUI {
- String Carbrand
+ String getImagesrc()
+ void setImagesrc(String)
+ String getCarbrand()
+ void setCarbrand(String)
+ String getCarmodel()
+ void setCarmodel(String)
+ String getNoPass()
+ void setNoPass(String)
+ String getAorM()
+ void setAorM(String)
+ String getRPD()
+ void setRPD(String)
}
class com.example.rentcar.LoginController {
- Button btnForgotPassword
- TextField txtUsername
- Button btnLogin
- Button btnSignUp
- PasswordField txtPassword
- Customer customer
+ void initialize(URL,ResourceBundle)
- void loginSystem(ActionEvent)
- void forgotPassword(ActionEvent)
- void signUp(ActionEvent)
}
class com.example.rentcar.admin_EditCustomerC {
- Stage stage
- Button backbutton
- Label Location1
- Rectangle carImage
- ComboBox<String> Status
- String[] status
- String selectedcustomer
- CustomerBookingHistory customerBookingHistory
~ void Switch_Booking(javafx.event.ActionEvent)
~ void Editaction(javafx.event.ActionEvent)
+ void initContent()
+ void initialize(URL,ResourceBundle)
}
abstract class com.example.rentcar.User {
- String username
- String password
- String email
- String fullName
- String gender
- String profilePicturePath
- String dob
+ <<Create>> User()
+ <<Create>> User(String,String,String,String,String,String,String)
+ String getUsername()
+ void setUsername(String)
+ String getPassword()
+ void setPassword(String)
+ String getEmail()
+ void setEmail(String)
+ String getFullName()
+ void setFullName(String)
+ String getGender()
+ void setGender(String)
+ String getProfilePicturePath()
+ void setProfilePicturePath(String)
+ String getDob()
+ void setDob(String)
+ String toString()
}
class com.example.rentcar.NotBlankValidation {
+ <<Create>> NotBlankValidation(String)
+ Boolean isValid()
}
class com.example.rentcar.Login {
+ void start(Stage)
+ {static} void main(String[])
}
class com.example.rentcar.CarBookingDetailsHolder {
- CarInfo carInfo
- {static} CarBookingDetailsHolder INSTANCE
- <<Create>> CarBookingDetailsHolder()
+ {static} CarBookingDetailsHolder getInstance()
+ void setCarInfo(CarInfo)
+ CarInfo getCarInfo()
}
class com.example.rentcar.SignUpController {
- TextField txtUsername
- CheckBox CheckedTermOfUser
- TextField txtFullName
- TextField txtEmail
- Button ButtonSignUp
- Button btnSignIn
- TextField txtStreetAddress
- DatePicker txtDatePicker
- TextField txtLiveIn
- ToggleGroup gender
- RadioButton radioFemale
- RadioButton radioMale
- PasswordField txtPassword
- PasswordField txtConfirmPassword
+ void initialize(URL,ResourceBundle)
- {static} Boolean validation(String,String,String,String,String,String,String,String)
- {static} Boolean checkPassword(String,String)
+ void restrictDatePicker(DatePicker,LocalDate,LocalDate)
~ void signUp(ActionEvent)
~ void signIn(ActionEvent)
- {static} void writeNewCustomer(String,String,String,String,String,String,String,double,String,String)
}
class com.example.rentcar.Customer {
- double walletAmount
- String liveIn
- String streetAddress
+ <<Create>> Customer()
+ <<Create>> Customer(String,String,String,String,String,String,String,double,String,String)
+ double getWalletAmount()
+ void setWalletAmount(double)
+ String getLiveIn()
+ void setLiveIn(String)
+ String getStreetAddress()
+ void setStreetAddress(String)
+ String toString()
}
class com.example.rentcar.admin_CarInfoC {
- Pane ContentArea
- GridPane carinfoGP
- List<CarInfo> allcarinfo
- CarInfo carInfo
+ void initialize(URL,ResourceBundle)
~ void Switch_addCarinfo(javafx.event.ActionEvent)
- void load()
- List<CarInfo> allcarinfo()
}
class com.example.rentcar.Reviews {
- int count
- {static} String customerViewHistoryFilePath
+ <<Create>> Reviews(String)
- void handleData(String)
+ int getCount()
+ void setCount(int)
}
class com.example.rentcar.SearchEngine {
- String pickUpLocation
- String dropOffLocation
- String pickUpDate
- String dropOffDate
+ <<Create>> SearchEngine(String,String,String,String)
+ String getPickUpLocation()
+ void setPickUpLocation(String)
+ String getDropOffLocation()
+ void setDropOffLocation(String)
+ String getPickUpDate()
+ void setPickUpDate(String)
+ String getDropOffDate()
+ void setDropOffDate(String)
}
class com.example.rentcar.admin_AddCarInfoC {
- Stage stage
- String imagesrc
- Pane ControlArea
- TextField CarModeltxt
- ComboBox<String> AorM
- Label ErrorMessage
- ImageView img
- String[] AM
- String[] NoPas
- String[] cartype
+ void Switch_Carinfo(javafx.event.ActionEvent)
+ void AddCarInfo(javafx.event.ActionEvent)
+ void initialize(URL,ResourceBundle)
- void clear()
- void getimage()
- void initContentArea(String)
}
class com.example.rentcar.admin_DashboardC {
- Stage stage
- Scene scene
- Parent root
- Button LogOut_btn
- Pane ControlArea
- ComboBox<String> NoCustmyd
- Label NoCustmonth
- String[] myd
- void Switch_Dashboard(javafx.event.ActionEvent)
- void Switch_booking()
- void Switch_Reports()
- void Switch_Carinfo()
+ void initialize(URL,ResourceBundle)
- void initContentArea(String)
- void LogOut(ActionEvent)
}
class com.example.rentcar.BookACarController {
- AnchorPane contentArea
- GridPane carContainer
- ComboBox<String> comboBoxItemsDisplaySelected
- ComboBox<String> comboBoxCategories
- Button btnSortByPriceHighestToLowest
- Button btnSortByPriceLowestToHighest
- ArrayList<AnchorPane> cards
- {static} String carInfoFilePathString
- {static} String storeCarImageFilePath
- {static} String storeCarIconFilePath
- {static} String customerFavouriteFilePathString
- {static} String customerViewHistoryFilePath
- Customer customer
- SearchEngine searchEngine
- ArrayList<CarInfo> carInfoArrayList
- ArrayList<CarInfo> carInfoDateArrayList
+ void initialize(URL,ResourceBundle)
- GridPane DisplayItemSelected(ActionEvent)
- void categoriesSelected(ActionEvent)
- void displayAll()
- void displayNew()
- void displayRecommend()
- void displayFavourite()
- GridPane displayCard()
- List<AnchorPane> cars(CarInfo)
- void receiveCarData(String)
- void initCustomerFavouriteTextFile()
- void initCustomerViewHistoryTextFile()
- void sortByPriceLowestToHighest(ActionEvent)
- void sortByPriceHighestToLowest(ActionEvent)
}
class com.example.rentcar.admin_BookingC {
- Stage stage
- Scene scene
- Parent root
- TableView<CustomerBookingHistory> tableview
- TableColumn<CustomerBookingHistory,String> colPickUpLocation
- TableColumn<CustomerBookingHistory,String> colDropOffLocation
- TableColumn<CustomerBookingHistory,String> colLicensePlate
- TableColumn<CustomerBookingHistory,Double> colRate
- TableColumn<CustomerBookingHistory,Double> colDiscount
- TableColumn<CustomerBookingHistory,String> colBrand
- TableColumn<CustomerBookingHistory,String> colModel
- Pane ControlArea
- TableColumn<CustomerBookingHistory,String> colImage
- TableColumn<CustomerBookingHistory,String> colBookingDateTime
- TableColumn<CustomerBookingHistory,Double> colPrice
- TableColumn<CustomerBookingHistory,Integer> colSeats
- TableColumn<CustomerBookingHistory,String> colAutomaticTransmission
- TableColumn<CustomerBookingHistory,String> colUsername
- TableColumn<CustomerBookingHistory,String> colPaymentMethod
- TableColumn<CustomerBookingHistory,String> colStatus
- TableColumn<CustomerBookingHistory,String> colDropOffDate
- TableColumn<CustomerBookingHistory,String> colPickUpDate
+ void initialize(URL,ResourceBundle)
- void loaddate()
~ ObservableList<CustomerBookingHistory> observableList()
~ void gettableindex(ActionEvent)
}


com.example.rentcar.Validation <|-- com.example.rentcar.EmailValidation
com.example.rentcar.Validation <|-- com.example.rentcar.DateValidation
javafx.fxml.Initializable <|.. com.example.rentcar.SearchHistory
com.example.rentcar.Validation <|-- com.example.rentcar.UniqueUsernameValidation
javafx.fxml.Initializable <|.. com.example.rentcar.DashboardController
javafx.fxml.Initializable <|.. com.example.rentcar.NavigationBarController
javafx.fxml.Initializable <|.. com.example.rentcar.Settings
javafx.fxml.Initializable <|.. com.example.rentcar.MyWallet
javafx.fxml.Initializable <|.. com.example.rentcar.MyBookingsController
javafx.fxml.Initializable <|.. com.example.rentcar.admin_EditCarInfoC
javafx.fxml.Initializable <|.. com.example.rentcar.TopUpController
javafx.fxml.Initializable <|.. com.example.rentcar.BookingLocationAndDateController
javafx.fxml.Initializable <|.. com.example.rentcar.BookingDetails
com.example.rentcar.Comparable <|.. com.example.rentcar.CarInfo
javafx.fxml.Initializable <|.. com.example.rentcar.admin_ReportC
javafx.fxml.Initializable <|.. com.example.rentcar.LoginController
javafx.fxml.Initializable <|.. com.example.rentcar.admin_EditCustomerC
com.example.rentcar.Validation <|-- com.example.rentcar.NotBlankValidation
javafx.application.Application <|-- com.example.rentcar.Login
javafx.fxml.Initializable <|.. com.example.rentcar.SignUpController
com.example.rentcar.User <|-- com.example.rentcar.Customer
javafx.fxml.Initializable <|.. com.example.rentcar.admin_CarInfoC
javafx.fxml.Initializable <|.. com.example.rentcar.admin_AddCarInfoC
javafx.fxml.Initializable <|.. com.example.rentcar.admin_DashboardC
javafx.fxml.Initializable <|.. com.example.rentcar.BookACarController
javafx.fxml.Initializable <|.. com.example.rentcar.admin_BookingC
@enduml